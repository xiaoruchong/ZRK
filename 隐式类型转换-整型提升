int main()
{
	//隐式类型转换
	//C的整型算术运算总是至少以缺省类型的精度来进行的
	//为了获得这个精度，表达式中的字符和短整型操作数在使用之前被转换为普通整型
	//---整型提升（按照变量的数据类型符号位来提升
	//CPU内整型运算的操作数字节长度一般是int的字节长度，也是通用寄存器的长度
	char a = 3;
	//00000000000000000000000000000011 整型int放入字符char里，从最低位开始进行截断
	//00000011 - a
	char b = 127;
	//00000000000000000000000001111111 整型int放入字符char里，从最低位开始进行截断
	//01111111 - b
	//a和b 计算前整型提升
	//00000000000000000000000000000011 - a
	//00000000000000000000000001111111 - b
	//00000000000000000000000010000010 - a+b
	//00000000000000000000000010000010 整型int放入字符char里，从最低位开始进行截断
	//10000010 - c
	char c = a + b;
	//c 整型提升 
	//11111111111111111111111110000010 - 补码
	//11111111111111111111111110000001 - 反码  补码减1
	//10000000000000000000000001111110 - 原码
	printf("%d\n", c);// c = -126
	return 0;
}
